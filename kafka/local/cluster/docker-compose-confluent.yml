version: '3.8'

networks:
  default:
    external: true
    name: dev-local

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.3
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok,stat"
    healthcheck:
      test: echo ruok | nc -w 2 localhost 2181 | grep imok
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3

  broker:
    image: confluentinc/cp-server:7.3.3
    hostname: broker
    container_name: broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "19092:19092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:19092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      test: nc -z localhost 19092 || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3

  schema-registry:
    image: confluentinc/cp-schema-registry:7.3.3
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      broker:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:9092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    healthcheck:
      test: curl --fail http://localhost:8081/ || exit 1
      start_period: 5s
      interval: 5s
      timeout: 5s
      retries: 3

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.3.3
    hostname: control-center
    container_name: control-center
    depends_on:
      broker:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:9092'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

# An alternative to Control Center
#  kpow:
#    image: factorhouse/kpow-ce
#    container_name: kpow
#    hostname: kpow
#    ports:
#      - "3000:3000"
#    environment:
#      BOOTSTRAP: broker-1:19092
#      SCHEMA_REGISTRY_URL: http://schema-registry:8081
#    #      CONNECT_REST_URL: http://connect-1:8083
#    #      SCHEMA_REGISTRY_AUTH=USER_INFO
#    #      SCHEMA_REGISTRY_USER=admin
#    #      SCHEMA_REGISTRY_PASSWORD=admin
#    depends_on:
#      broker-1:
#        condition: service_healthy
#      schema-registry:
#        condition: service_healthy
##      connect-1:
##        condition: service_healthy